import asyncio
from bot.create_bot import bot
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.filters.state import State, StatesGroup
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.utils.chat_action import ChatActionSender
from bot.keyboards import ready_kb, question_kb, done_kb # –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from datetime import date, timedelta
import os
import django
import sys
from asgiref.sync import sync_to_async


from core.models import Employee, Answer

# –≤—Ä–µ–º—è, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
short_delay = 1
long_delay = 1

# —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
class Form_24(StatesGroup):
   how_are_you = State()
   question_1 = State()
   question_2 = State()
   question_3 = State()
   question_4 = State()
   question_5 = State()
   question_6 = State()
   question_7 = State()
   question_8 = State()
   result = State()
   
after_24_month_router = Router()

# –ü–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ–≥–æ telegram id
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç: telegram_id ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ telegram
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –æ–±—ä–µ–∫—Ç Employee –∏–ª–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
async def get_employee(telegram_id):
   return await sync_to_async(Employee.objects.get)(telegram_id = telegram_id)

# –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç: employee ‚Äî —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –æ—Ç–≤–µ—Ç–∏–≤—à–∏–π –Ω–∞ –≤–æ–ø—Ä–æ—Å, message_text ‚Äî —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞, question_id ‚Äî id –≤–æ–ø—Ä–æ—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async def save_answer(employee, message_text, question_id):
   today = date.today()
   delta = today - employee.hire_date
   days_passed = delta.days
   employee_answer = Answer(
      name = message_text,
      login_id = employee.id,
      question_id = question_id - 1
   )
   await sync_to_async(employee_answer.save)()

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –∏ –∑–∞–¥–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç: message ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, state ‚Äî —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞, next_state ‚Äî —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ None –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è,
# question_text ‚Äî —Ç–µ–∫—Å—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, question_id ‚Äî id —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, reply_markup (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ‚Äî –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
async def handle_question(message: Message, state: FSMContext, next_state, question_text, question_id, reply_markup = None):
   telegram_id = message.from_user.id
   employee = await get_employee(telegram_id)
   await save_answer(employee, message.text, question_id)
   async with ChatActionSender.typing(bot=bot, chat_id = message.chat.id):
      await asyncio.sleep(short_delay)
      await message.answer(question_text, reply_markup = reply_markup)
   if next_state:
      await state.set_state(next_state)


@after_24_month_router.message(F.text == "–Ø –∑–∞–ø–æ–ª–Ω–∏–ª(–∞)")   
async def end(message: Message, state: FSMContext):
   async with ChatActionSender.typing(bot = bot, chat_id = message.chat.id):
      await asyncio.sleep(short_delay)
      await message.answer(
         "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! \n\n–¢—ã –¥–µ–ª–∞–µ—à—å –≤–∞–∂–Ω—É—é —Ä–∞–±–æ—Ç—É, –∏ –º—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ —Ç–≤–æ–π –≤–∫–ª–∞–¥ üëè\n\n–•–æ—á—É –ø–æ–∂–µ–ª–∞—Ç—å —Ç–µ–±–µ –ª—ë–≥–∫–æ—Å—Ç–∏ –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –±–æ–ª—å—à–æ–≥–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç –≤—Å–µ–≥–æ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å!\n\n–£–¥–∞—á–∏ –≤ –Ω–æ–≤–æ–º —Ä–∞–±–æ—á–µ–º –≥–æ–¥—É! üèÜ",
         reply_markup = ReplyKeyboardRemove()
      )
   await state.clear()  

@after_24_month_router.message(Command('after_24_month'))
async def start_poll_after_24_month(message: Message, state: FSMContext):
   async with ChatActionSender.typing(bot=bot, chat_id = message.chat.id):
      await asyncio.sleep(short_delay)
      await message.answer('–ü—Ä–∏–≤–µ—Ç!\n\n'
                           '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –¥–≤—É—Ö–ª–µ—Ç–∏–µ–º –≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ! üéØ\n\n'
                           '–ü—Ä–æ—à–ª–æ —É–∂–µ —Ü–µ–ª—ã—Ö –¥–≤–∞ –≥–æ–¥–∞ ‚Äî —Ç—ã –ø—Ä–æ—à—ë–ª –æ–≥—Ä–æ–º–Ω—ã–π –ø—É—Ç—å, –¥–æ–∫–∞–∑–∞–ª —Å–≤–æ—é –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ —Å–¥–µ–ª–∞–ª –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏. –í–ø–µ—Ä–µ–¥–∏ –∂–¥—É—Ç –Ω–æ–≤—ã–µ —Ä—É–±–µ–∂–∏ –∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è!\n'
                           '–ü–æ–¥–µ–ª–∏—Å—å –º—ã—Å–ª—è–º–∏ –æ –Ω—ã–Ω–µ—à–Ω–µ–π —Ä–∞–±–æ—Ç–µ, —Ä–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ –≤–∏–¥–∏—à—å —Å–≤–æ—ë –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â—ë –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º–∏.\n'
                           '–ì–æ—Ç–æ–≤(–∞) –∫ –æ–±—Å—É–∂–¥–µ–Ω–∏—é –∏ –Ω–æ–≤–æ–º—É —ç—Ç–∞–ø—É —Ä–∞–∑–≤–∏—Ç–∏—è? –ñ–º–∏ –∫–Ω–æ–ø–∫—É ¬´–ì–æ—Ç–æ–≤(–∞)¬ª!', reply_markup = await ready_kb(message.from_user.id))
   await state.set_state(Form_24.how_are_you)

@after_24_month_router.message(F.text == "–ì–æ—Ç–æ–≤(–∞)", Form_24.how_are_you)
async def how_are_you(message: Message, state: FSMContext):
   async with ChatActionSender.typing(bot=bot, chat_id=message.chat.id):
      await asyncio.sleep(short_delay)
      await message.answer(
         "–ö–∞–∫ –æ–±—Å—Ç–æ—è—Ç –¥–µ–ª–∞ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ?",
         reply_markup=ReplyKeyboardRemove()
      )
   await state.set_state(Form_24.question_1)

@after_24_month_router.message(F.text, Form_24.question_1)
async def question_1(message: Message, state: FSMContext):
   await handle_question(message, state, Form_24.question_2, "–ö–∞–∫–∏–µ –≥–ª–∞–≤–Ω—ã–µ —É—Å–ø–µ—Ö–∏ –≤—ã–¥–µ–ª–∏–ª(–∞) –±—ã –∑–∞ –≤—Ç–æ—Ä–æ–π –≥–æ–¥ —Ä–∞–±–æ—Ç—ã?", 56)

@after_24_month_router.message(F.text, Form_24.question_2)
async def question_2(message: Message, state: FSMContext):
   await handle_question(message, state, Form_24.question_3, "–ü–æ—è–≤–∏–ª–æ—Å—å –ª–∏ –æ—â—É—â–µ–Ω–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ –∫–æ–º–ø–∞–Ω–∏–∏?", 57)

@after_24_month_router.message(F.text, Form_24.question_3)
async def question_3(message: Message, state: FSMContext):
   await handle_question(message, state, Form_24.question_4, "–í–æ–∑–Ω–∏–∫–∞–ª–∏ –ª–∏ —Å–µ—Ä—å—ë–∑–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏? –ï—Å–ª–∏ –¥–∞, –∫–∞–∫ —Ä–µ—à–∞–ª(–∞) –∏—Ö?", 58)

@after_24_month_router.message(F.text, Form_24.question_4)
async def question_4(message: Message, state: FSMContext):
   await handle_question(message, state, Form_24.question_5, "–ü–ª–∞–Ω–∏—Ä—É–µ—à—å –ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–ª–∏ –ø–µ—Ä–µ–ø–æ–¥–≥–æ—Ç–æ–≤–∫—É?", 59)

@after_24_month_router.message(F.text, Form_24.question_5)
async def question_5(message: Message, state: FSMContext):
   await handle_question(message, state, Form_24.question_6, "–ü–æ–ª–Ω–æ—Å—Ç—å—é –ª–∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞?", 60)
   
@after_24_month_router.message(F.text, Form_24.question_6)
async def question_6(message: Message, state: FSMContext):
   await handle_question(message, state, Form_24.question_7, "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ª–∏ –ø–æ–º–æ—â—å –≤ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞–≥—Ä—É–∑–æ–∫ –∏ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Å—Ç—Ä–µ—Å—Å–∞?", 61)

@after_24_month_router.message(F.text, Form_24.question_7)
async def question_7(message: Message, state: FSMContext):
   await handle_question(message, state, Form_24.question_8, "–°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ª–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—å –∫ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∂–µ–ª–∞–Ω–∏–µ –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ä–æ–∫?", 62)

@after_24_month_router.message(F.text, Form_24.question_8)
async def question_8(message: Message, state: FSMContext):
   await handle_question(message, state, Form_24.result, "–ß–µ–≥–æ –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å –¥–æ–±–∏—Ç—å—Å—è –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –≥–æ–¥—ã?", 63)

@after_24_month_router.message(F.text, Form_24.result)
async def result(message: Message, state: FSMContext):
   await end(message, state)