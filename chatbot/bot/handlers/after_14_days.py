import asyncio
from bot.create_bot import bot, dp
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.filters.state import State, StatesGroup
from aiogram.types import Message, ReplyKeyboardRemove, PollAnswer
from aiogram.utils.chat_action import ChatActionSender
from asgiref.sync import sync_to_async
from aiogram.types import Message
from core.models import Employee, Answer, Poll

# –≤—Ä–µ–º—è, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
short_delay = 1
long_delay = 1

POLL_OPTIONS = ["–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ! üëç", "–í—Å–µ —Ö–æ—Ä–æ—à–æ! üòä", "–°—Ä–µ–¥–Ω–µ", "–•–æ—Ç–µ–ª–æ—Å—å –±—ã, —á—Ç–æ–± –±—ã–ª–æ –ª—É—á—à–µ ‚Ä¶üôÅ", "–í—Å–µ –ø–ª–æ—Ö–æ! üò¢"]

# —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
class Form_14(StatesGroup):
   how_are_you = State()
   track_passing = State()
   question_1 = State()
   question_2 = State()
   question_3 = State()
   result = State()
   
after_14_days_router = Router()

# –ü–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ–≥–æ telegram id
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç: telegram_id ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ telegram
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –æ–±—ä–µ–∫—Ç Employee –∏–ª–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
async def get_employee(telegram_id):
   return await sync_to_async(Employee.objects.get)(telegram_id = telegram_id)

# –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–≤–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç: employee ‚Äî —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –æ—Ç–≤–µ—Ç–∏–≤—à–∏–π –Ω–∞ –≤–æ–ø—Ä–æ—Å, message_text ‚Äî —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞, question_id ‚Äî id –≤–æ–ø—Ä–æ—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async def save_answer(employee, message_text, question_id):
   employee_answer = Answer(
      name = message_text,
      login_id = employee.id,
      question_id = question_id - 1
   )
   await sync_to_async(employee_answer.save)()

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –∏ –∑–∞–¥–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç: message ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, state ‚Äî —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞, next_state ‚Äî —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ None –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è,
# question_text ‚Äî —Ç–µ–∫—Å—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, question_id ‚Äî id —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, reply_markup (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ‚Äî –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
async def handle_question(message: Message, state: FSMContext, next_state, question_text, question_id, reply_markup = None):
   telegram_id = message.from_user.id
   employee = await get_employee(telegram_id)
   await save_answer(employee, message.text, question_id)
   async with ChatActionSender.typing(bot=bot, chat_id = message.chat.id):
      await asyncio.sleep(short_delay)
      await message.answer(question_text, reply_markup = reply_markup)
   if next_state:
      await state.set_state(next_state)

# –ó–∞–≤–µ—Ä—à–∞–µ—Ç –æ–ø—Ä–æ—Å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç: message ‚Äî –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, state ‚Äî —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞, question_id (int, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ‚Äî id –≤–æ–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
async def finish_poll(message: Message, state: FSMContext, question_id=None):
   if question_id:
      telegram_id = message.from_user.id
      employee = await get_employee(telegram_id)
      await save_answer(employee, message.text, question_id)
   async with ChatActionSender.typing(bot = bot, chat_id = message.chat.id):
      await asyncio.sleep(short_delay)
      await message.answer(
         "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º –≤—Å–µ –∫—É—Ä–∞—Ç–æ—Ä—É üëå\n"
         "–î–æ —Å–≤—è–∑–∏! üí¨")
   await state.clear()


@after_14_days_router.message(Command('after_14_days'))
async def start_poll_after_14_days(message: Message, state: FSMContext):
   async with ChatActionSender.typing(bot=bot, chat_id = message.chat.id):
      await asyncio.sleep(short_delay)
      await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –º–æ–ª–æ–¥–æ–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç! üëã\n\n'
                           '–≠—Ç–æ —è ‚Äì –ì–∞–∑–æ–ø—Ç–∏–∫—É–º, —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫! \n'
                           '–ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?\n'
                           '–û—Ç–º–µ—Ç—å –≤ –æ–ø—Ä–æ—Å–µ –Ω–∏–∂–µ ‚¨á',)
      await message.answer_poll(
         question="–ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?",
         options=POLL_OPTIONS,      
         is_anonymous=False,
         allows_multiple_answers=False,
         type="regular"
      )
      await message.answer(
         "–ö–∞–∫ –æ–±—Å—Ç–æ—è—Ç –¥–µ–ª–∞ —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π —Ç–≤–æ–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏? –û–ø–∏—à–∏ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö ‚¨á"
      )
      await state.set_state(Form_14.question_3)
      

@after_14_days_router.poll_answer()
async def poll_data(poll_answer: PollAnswer):
   options = POLL_OPTIONS
   selected_option_index = poll_answer.option_ids[0]
   selected_option_text = options[selected_option_index]
   employee = await get_employee(poll_answer.user.id)
   employee_answer = Answer(
      name=selected_option_text,
      login_id=employee.id,
      question_id=46
   )
   await sync_to_async(employee_answer.save)()
   
  

@after_14_days_router.message(F.text, Form_14.question_2)
async def how_are_you(message: Message, state: FSMContext):
   async with ChatActionSender.typing(bot=bot, chat_id=message.chat.id):
      await asyncio.sleep(short_delay)
      await message.answer(
         "–ö–∞–∫ –æ–±—Å—Ç–æ—è—Ç –¥–µ–ª–∞ —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π —Ç–≤–æ–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏? –û–ø–∏—à–∏ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö ‚¨á",
         reply_markup=ReplyKeyboardRemove()
      )
   await state.set_state(Form_14.question_3)


@after_14_days_router.message(F.text, Form_14.question_3)
async def question_3(message: Message, state: FSMContext):
   await handle_question(message, state, Form_14.result, "–í–æ–∑–º–æ–∂–Ω–æ —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?", 48)


@after_14_days_router.message(F.text, Form_14.result)
async def result(message: Message, state: FSMContext):
   await finish_poll(message, state, 49)